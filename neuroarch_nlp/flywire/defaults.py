
import json, pathlib

# TODO: Support other valid spellings of terms? e.g. "centre" for "center"
#       The basic spelling correction, with its current parameters,
#       should accept most of these alternate valid spellings.

# second list in the tuple is case insensitive
neuropils = [
    (['AME_R', 'AME_L'],
        ['accessory medulla', 'ame']),
    ('AME_R',
        ['right accessory medulla', 'right ame', 'ame_r']),
    ('AME_L',
        ['left accessory medulla', 'left ame', 'ame_l']),
    (['LA_R', 'LA_L'],
        ['lamina', 'lam']),
    ('LA_R',
        ['right lamina', 'right lam', 'lam_r', 'la_r']),
    ('LA_L',
        ['left lamina', 'left lam', 'lam_l', 'la_l']),
    (['ME_R', 'ME_L'],
        ['medulla', 'med', 'me']),
    ('ME_R',
        ['right medulla', 'right med', 'med_r', 'right me', 'me_r']),
    ('ME_L',
        ['left medulla', 'left med', 'med_l',  'left me', 'me_l']),
    (['LO_R', 'LO_L'],
        ['lobula', 'lob', 'lo']),
    ('LO_R',
        ['right lobula', 'right lob', 'lob_r', 'lo_r', 'right lo', 'lo_r']),
    ('LO_L',
        ['left lobula', 'left lob', 'lob_l', 'lo_l', 'right lo', 'lo_l']),
    (['LOP_R', 'LOP_L'],
        ['lobula plate', 'lop']),
    ('LOP_R',
        ['right lobula plate', 'right lop', 'lop_r', 'lop_r']),
    ('LOP_L',
        ['left lobula plate', 'left lop', 'lop_l', 'lop_l']),
    (['BU_R', 'BU_L'],
        ['bulb', 'bu']),
    ('BU_R',
        ['right bulb', 'right bu' 'bu_r']),
    ('BU_L',
        ['left bulb', 'left bu', 'bu_l']),
    (['LAL_R', 'LAL_L'],
        ['lateral accessory lobe', 'lal']),
    ('LAL_R',
        ['right lateral accessory lobe', 'right lal', 'lal_r']),
    ('LAL_L',
        ['left lateral accessory lobe', 'left lal', 'lal_l']),
    (['GA_R','GA_L'],
        ['gall', 'ga']),
    ('GA_R',
        ['right gall', 'right ga', 'ga_r']),
    ('GA_L',
        ['left gall', 'left ga', 'ga_l']),
    (['LH_R', 'LH_L'],
        ['lateral horn', 'lh']),
    ('LH_R',
        ['right lateral horn', 'right lh', 'lh_r']),
    ('LH_L',
        ['left lateral horn', 'left lh', 'lh_l']),
    (['CAN_R', 'CAN_L'],
        ['cantle', 'can']),
    ('CAN_R',
        ['right cantle', 'right can', 'can_r']),
    ('CAN_L',
        ['left cantle', 'left can', 'can_l']),
    (['AMMC_R', 'AMMC_L'],
        ['antennal mechanosensory and motor center', 'ammc']),
    ('AMMC_R',
        ['right antennal mechanosensory and motor center', 'right ammc', 'ammc_r']),
    ('AMMC_L',
        ['left antennal mechanosensory and motor center', 'let ammc', 'ammc_l']),
    (['FLA_R', 'FLA_L'],
        ['flange', 'fla']),
    ('FLA_R',
        ['right flange', 'right fla', 'fla_r']),
    ('FLA_L',
        ['left flange', 'left fla', 'fla_l']),
    (['ICL_R', 'ICL_L'],
        ['interior clamp', 'icl']),
    ('ICL_R',
        ['right interior clamp', 'right icl', 'icl_r']),
    ('ICL_L',
        ['left interior clamp', 'left icl', 'icl_l']),
    (['IB_R', 'IB_L'],
        ['interior bridge', 'ib']),
    ('IB_R',
        ['right interior bridge', 'right ib', 'ib_r']),
    ('IB_L',
        ['left interior bridge', 'left ib', 'ib_l']),
    (['ATL_R', 'ATL_L'],
        ['antler', 'atl']),
    ('ATL_R',
        ['right antler', 'right atl', 'atl_r']),
    ('ATL_L',
        ['left antler', 'left atl', 'atl_l']),
    (['CRE_R', 'CRE_L'],
        ['crepine', 'cre']),
    ('CRE_R',
        ['right crepine', 'right cre', 'cre_r']),
    ('CRE_L',
        ['left crepine', 'left cre', 'cre_l']),
    (['SCL_R', 'SCL_L'],
        ['superior clamp', 'scl']),
    ('SCL_R',
        ['right superior clamp', 'right scl', 'scl_r']),
    ('SCL_L',
        ['left superior clamp', 'left scl', 'scl_l']),
    (['VES_R', 'VES_L'],
        ['vest', 'ves']),
    ('VES_R',
        ['right vest', 'right ves', 'ves_r']),
    ('VES_L',
        ['left vest', 'left ves', 'ves_l']),
    (['GOR_R', 'GOR_L'],
        ['gorget', 'gor']),
    ('GOR_R',
        ['right gorget', 'right gor', 'gor_r']),
    ('GOR_L',
        ['left gorget', 'left gor', 'gor_l']),
    (['EPA_R', 'EPA_L'],
        ['epaulette', 'epa']),
    ('EPA_R',
        ['right epaulette', 'right epa', 'ves_r']),
    ('EPA_L',
        ['left epaulette', 'left epa', 'ves_l']),
    (['SPS_R', 'SPS_L'],
        ['superior posterior slope', 'sps']),
    ('SPS_R',
        ['right superior posterior slope', 'right sps', 'sps_r']),
    ('SPS_L',
        ['left superior posterior slope', 'left sps', 'sps_l']),
    (['IPS_R', 'IPS_L'],
        ['inferior posterior slope', 'ips']),
    ('IPS_R',
        ['right inferior posterior slope', 'right ips', 'ips_r']),
    ('IPS_L',
        ['left inferior posterior slope', 'left ips', 'ips_l']),
    (['PED_R', 'PED_L'],
        ['pedunculus', 'ped']),
    ('PED_R',
        ['right pedunculus', 'right ped', 'ped_r']),
    ('PED_L',
        ['left pedunculus', 'left ped', 'ped_l']),
    (['VL_R', 'VL_L'],
        ['vertical lobe', 'vl']),
    ('VL_R',
        ['right vertical lobe', 'right vl', 'vl_r']),
    ('VL_L',
        ['left vertical lobe', 'left vl', 'vl_l']),
    (['ML_R', 'ML_L'],
        ['medial lobe', 'ml']),
    ('ML_R',
        ['right medial lobe', 'right ml', 'ml_r']),
    ('ML_L',
        ['left medial lobe', 'left ml', 'ml_l']),
    (['CA_R', 'CA_L'],
        ['calyx', 'ca']),
    ('CA_R',
        ['right calyx', 'right ca', 'ca_r']),
    ('CA_L',
        ['left calyx', 'left ca', 'ca_l']),
    (['PED_R', 'PED_L', 'VL_R', 'VL_L', 'ML_R', 'ML_L', 'CA_R', 'CA_L'],
        ['mushroom body', 'mb']),
    (['PED_R', 'VL_R', 'ML_R', 'CA_R'],
        ['right mushroom body', 'right mb', 'mb_r']),
    (['PED_L', 'VL_L', 'ML_L', 'CA_L'],
        ['left mushroom body', 'left mb', 'mb_l']),
    (['AL_R', 'AL_L'],
        ['antennal lobe', 'al']),
    ('AL_R',
        ['right antennal lobe', 'right al', 'al_r']),
    ('AL_L',
        ['left antennal lobe', 'left al', 'al_l']),
    (['AN_R', 'AN_L'],
        ['antenna', 'an']),
    ('AN_R',
        ['right antenna', 'right an', 'an_r']),
    ('AN_L',
        ['left antenna', 'left an', 'an_l']),
    (['EB', 'PB', 'FB', 'NO'],
        ['central complex', 'cc', 'cx']),
    ('EB',
        ['ellipsoid body', 'eb']),
    ('NO',
        ['noduli', 'nod', 'no']),
    ('PB',
        ['protocerebral bridge', 'pcb', 'pb']),
    ('FB',
        ['fanshaped body', 'fb']),
    ('AVLP_R',
        ['right anterior ventrolateral protocerebrum', 'right avlp', 'avlp_r']),
    ('AVLP_L',
        ['left anterior ventrolateral protocerebrum', 'left avlp', 'avlp_l']),
    (['AVLP_R', 'AVLP_L'],
        ['anterior ventrolateral protocerebrum', 'avlp', 'avlp_r']),
    ('PVLP_R',
        ['right posterior ventrolateral protocerebrum', 'right pvlp', 'pvlp_r']),
    ('PVLP_L',
        ['left posterior ventrolateral protocerebrum', 'left pvlp', 'pvlp_l']),
    (['PVLP_R', 'PVLP_L'],
        ['posterior ventrolateral protocerebrum', 'pvlp']),
    (['AVLP_R', 'PVLP_R'],
        ['right ventrolateral protocerebrum', 'right vlp', 'vlp_r']),
    (['AVLP_L', 'PVLP_L'],
        ['left ventrolateral protocerebrum', 'left vlp', 'vlp_l']),
    (['AVLP_R', 'PVLP_R', 'AVLP_L', 'PVLP_L'],
        ['ventrolateral protocerebrum', 'vlp']),
    (['AOTU_R', 'AOTU_L'],
        ['anterior optic tubercle', 'aotu']),
    ('AOTU_R',
        ['right anterior optic tubercle', 'right aotu', 'aotu_r']),
    ('AOTU_L',
        ['left anterior optic tubercle', 'left aotu', 'aotu_l']),
    ('PLP_R',
        ['right posterior lateral protocerebrum', 'right plp', 'plp_r']),
    ('PLP_L',
        ['left posterior lateral protocerebrum', 'left plp', 'plp_l']),
    (['PLP_R','PLP_L'],
        ['posterior lateral protocerebrum', 'plp']),
    ('WED_R',
        ['right wedge', 'right wed', 'wed_r']),
    ('WED_L',
        ['left wedge', 'left wed', 'wed_l']),
    (['WED_R','WED_L'],
        ['wedge', 'wed']),
    (['SLP_R', 'SLP_L'],
        ['superior lateral protocebrebrum', 'slp']),
    ('SLP_R',
        ['right superior lateral protocebrebrum', 'right slp', 'slp_r']),
    ('SLP_L',
        ['left superior lateral protocebrebrum', 'left slp', 'slp_l']),
    (['SIP_R', 'SIP_L'],
        ['superior intermediate protocebrebrum', 'sip']),
    ('SIP_R',
        ['right superior intermediate protocebrebrum', 'right sip', 'sip_r']),
    ('SIP_L',
        ['left superior intermediate protocebrebrum', 'left sip', 'sip_l']),
    (['SMP_R', 'SMP_L'],
        ['superior medial protocebrebrum', 'smp']),
    ('SMP_R',
        ['right superior medial protocebrebrum', 'right smp', 'smp_r']),
    ('SMP_L',
        ['left superior medial protocebrebrum', 'left smp', 'smp_l']),
    ('SAD',
        ['saddle', 'sad']),
    ('PRW',
        ['prow', 'prw']),
    ('OCG',
        ['ocellar ganglion', 'ocg', 'ocelli']),
    ('GNG',
        ['gnatha ganglia', 'gng']),
    (['ME_R', 'AME_R', 'LO_R', 'LOP_R', 'LA_R'],
        ['right optic lobe', 'right ol', 'ol_r']),
    (['ME_L', 'AME_L', 'LO_L', 'LOP_L', 'LA_L'],
        ['left optic lobe', 'left ol', 'ol_l']),
    (['ME_R', 'AME_R', 'LO_R', 'LOP_R', 'LA_R','ME_L', 'AME_L', 'LO_L', 'LOP_L', 'LA_L'],
        ['optic lobe', 'ol']),
    (['BU_R', 'LAL_R', 'GA_R'],
        ['right lateral complex', 'right lx', 'lx_r']),
    (['BU_L', 'LAL_L', 'GA_L'],
        ['left lateral complex', 'left lx', 'lx_l']),
    (['BU_R', 'LAL_R', 'GA_R', 'BU_L', 'LAL_L', 'GA_L'],
        ['lateral complex', 'lx']),
    (['AOTU_R', 'AVLP_R', 'PVLP_R', 'PLP_R', 'WED_R'],
        ['right ventrolateral neuropils', 'right vlnp', 'vlnp_r']),
    (['AOTU_R', 'AVLP_R', 'PVLP_R', 'PLP_R', 'WED_R'],
        ['right ventrolateral neuropils', 'right vlnp', 'vlnp_r']),
    (['AOTU_L', 'AVLP_L', 'PVLP_L', 'PLP_L', 'WED_L'],
        ['left ventrolateral neuropils', 'left vlnp', 'vlnp_l']),
    (['AOTU_L', 'AVLP_L', 'PVLP_L', 'PLP_L', 'WED_L', 'AOTU_R', 'AVLP_R', 'PVLP_R', 'PLP_R', 'WED_R'],
        ['ventrolateral neuropils', 'vlnp']),
    (['SLP_R', 'SIP_R', 'SMP_R'],
        ['right superior neuropils', 'right snp', 'snp_r']),
    (['SLP_L', 'SIP_L', 'SMP_L'],
        ['left superior neuropils', 'left snp', 'snp_l']),
    (['SLP_R', 'SIP_R', 'SMP_R', 'SLP_L', 'SIP_L', 'SMP_L'],
        ['superior neuropils', 'snp']),
    (['CRE_R', 'SCL_R', 'ICL_R', 'IB_R', 'ATL_R'],
        ['right inferior neuropils', 'right inp', 'inp_r']),
    (['CRE_L', 'SCL_L', 'ICL_L', 'IB_L', 'ATL_L'],
        ['left inferior neuropils', 'left inp', 'inp_l']),
    (['CRE_R', 'SCL_R', 'ICL_R', 'IB_R', 'ATL_R', 'CRE_L', 'SCL_L', 'ICL_L', 'IB_L', 'ATL_L'],
        ['inferior neuropils', 'inp']),
    (['VES_R', 'EPA_R', 'GOR_R', 'SPS_R', 'IPS_R'],
        ['right ventromedial neuropils', 'right vmnp', 'vmnp_r']),
    (['VES_L', 'EPA_L', 'GOR_L', 'SPS_L', 'IPS_L'],
        ['left ventromedial neuropils', 'left vmnp', 'vmnp_l']),
    (['VES_R', 'EPA_R', 'GOR_R', 'SPS_R', 'IPS_R', 'VES_L', 'EPA_L', 'GOR_L', 'SPS_L', 'IPS_L'],
        ['ventromedial neuropils', 'vmnp']),
    (['SAD_R', 'FLA_R', 'CAN_R', 'AMMC_R', 'PRW_R'],
        ['right periesophageal neuropils', 'right penp', 'penp_r']),
    (['SAD_L', 'FLA_L', 'CAN_L', 'AMMC_L', 'PRW_L'],
        ['left periesophageal neuropils', 'left penp', 'penp_l']),
    (['SAD_R', 'FLA_R', 'CAN_R', 'AMMC_R', 'PRW_R', 'SAD_L', 'FLA_L', 'CAN_L', 'AMMC_L', 'PRW_L'],
        ['periesophageal neuropils', 'penp']),
    ]

arborization_regions = []

for a, b in arborization_regions:
    for i in range(len(b)):
        b[i] = b[i].lower()

# 'subregion query name': (Class, Instance, Name)
subregions = {}

subregions = {k.lower(): v for k, v in subregions.items()}

path = pathlib.Path(__file__).parent.resolve()
with open('{}/neuron_types.json'.format(path), 'r') as f:
    all_types = json.load(f)

neuron_types = {k.lower().replace('+', ''): "/r(?i){}[^0-9a-zA-Z](.*)".format(k.split('(')[0].replace('+', '\\\+')) for k in all_types}
subtypes = {}
for n in all_types:
    if len(n.split('_')) > 1:
        sub_names = n.split('_')
        if len(sub_names[-1]) == 1:
            name = '_'.join(sub_names[:-1])
            if name not in subtypes:
                subtypes[name] = []
            subtypes[name].append(sub_names[-1])
neuron_types.update({k.lower().replace('+', ''): "/r(?i){}_({})[^0-9a-zA-Z](.*)".format(k.replace('+', '\\\+'), '|'.join(v))  for k, v in subtypes.items()})

neuron_types.update({
    'osn':'/r(.*)ORN(.*)',
    'orn':'/r(.*)ORN(.*)',
    'olfactory sensory neurons':'/r(.*)ORN(.*)',
    'olfactory sensory neuron':'/r(.*)ORN(.*)',
    'olfactory receptor neuron':'/r(.*)ORN(.*)',
    'olfactory receptor neurons':'/r(.*)ORN(.*)',
     # 'pn':['PN','mPN'],
    'pn': '/r(.*)(?<!(L|WED))PN(.*)/r',
    'upn': "/r(D|V)(.*)_(m|v|ml|l|lv|ad|il|l2|il2|iv)PN(.*)",
    'uniglomerular pn': "/r(D|V)(.*)_(m|v|ml|l|lv|ad|il|l2|il2|iv)PN(.*)",
    'mpn': '/r((M|MZ)_(.*)PN|mPN)(.*)',
    'multipn': '/r((M|MZ)_(.*)PN|mPN)(.*)',
    'mpns': '/r((M|MZ)_(.*)PN|mPN)(.*)',
    'multiglomerular pn': '/r((M|MZ)_(.*)PN|mPN)(.*)',
    'ln': '/r((l[^-]*|v(.*)|i(.*))LN(.*)|LN(_|[^dO]*_)(.*)[0-9]+)',
    'alln': '/r((l[^-]*|v(.*)|i(.*))LN(.*)|LN(_|[^dO]*_)(.*)[0-9]+)',
    'kenyon cells':'/rKC(.*)','kc':'/rKC(.*)','kenyon':'/rKC(.*)','kcs':'/rKC(.*)',
    'alpha beta kc': '/rKCab(.*)',
    'ab kc': '/rKCab(.*)',
    "alpha' beta' kc": "/rKCa'b'(.*)",
    "a'b' kc": "/rKCa'b'(.*)",
    "gamma kc": "/rKCg(.*)",
    "g kc": "/rKCg(.*)",
    "kcab": "/rKCab(.*)",
    "kca'b'": "/rKCa'b'(.*)",
    "kcg": "/rKCg(.*)",
    'mbon': '/rMBON(.*)',
    'mushroom body output neurons': '/r(.*)MBON(.*)',
    'apl': '/r(.*)APL(.*)R_1',
    'apls': '/r(.*)APL(.*)',
    'dan': '/r(PPL|PAM)(.*)',
    'ppl dan': '/rPPL(.*)',
    'pam dan': '/rPAM(.*)',
    'lc': '/rlc(.*)',
    'lobula columnar': '/rlc(.*)',
    'lplc': '/rlplc(.*)',
    'lobula complex columnar': '/rlplc(.*)',
    'tubu': '/rTuBu(.*)',
    'mc': '/rMC(.*)',
    'lt': '/rLT(.*)',
    'lobula tangential': '/rLT(.*)',
    'lptc': '/rLPTC(.*)',
    'gln': '/rGLN(.*)',
    'LNv': '/r(.*)(l|s)-LNv(.*)',
    'all': '/r(.*)'
})

neuron_types['all'] = '/r(.*)'

neuron_types.update({'regex{}'.format(i): 'regex{}'.format(i) for i in range(100)})
